
# Extensions
druid.extensions.directory=/usr/lib/druid/extensions
druid.extensions.hadoopDependenciesDir=/usr/lib/druid/hadoop-dependencies
druid.extensions.loadList=<%= @extensions %>

# Zookeeper
druid.zk.paths.base=/druid
druid.zk.service.host=<%= @zookeeper_hosts %>

# Logging
# druid.emitter=logging
# druid.emitter.logging.logLevel=info

# kafka metrics
druid.emitter=kafka
druid.emitter.kafka.bootstrap.servers=localhost:9092
druid.emitter.kafka.event.types=["metrics", "alerts", "requests", "segment_metadata"]
druid.emitter.kafka.metric.topic=rb_druid_metrics
druid.emitter.kafka.request.topic=rb_druid_request_logs
druid.emitter.kafka.segmentMetadata.topic=rb_druid_segment_metadata
druid.emitter.kafka.alert.topic=rb_druid_alerts
druid.emitter.kafka.producer.config={"max.block.ms":10000}
#druid.emitter.kafka.event.types=["alerts"]
#druid.emitter.kafka.event.types=["metrics"]

# Metadata Storage
<% if @psql_uri %>
druid.metadata.storage.type=postgresql
druid.metadata.storage.connector.connectURI=jdbc:postgresql://<%= @psql_uri %>/druid
druid.metadata.storage.connector.user=<%= @psql_user %>
druid.metadata.storage.connector.password=<%= @psql_password %>
<% else %>
druid.metadata.storage.type=derby
<% end %>

# Caching
<% if @memcached_hosts %>
druid.cache.type=memcached
druid.cache.hosts=<%= @memcached_hosts.join(",") %>
druid.cache.expiration=86400
druid.cache.memcachedPrefix=druid
<% else %>
druid.cache.type=local
<% end %>

# Deep Storage
<% if @s3_bucket %>
druid.storage.type=s3
druid.s3.protocol=http
druid.s3.enablePathStyleAccess=true
druid.s3.endpoint.signingRegion=<%= @s3_region %>
druid.s3.endpoint.url=http://<%= @s3_service %>:<%= @s3_port %>/
druid.s3.accessKey=<%= @s3_access_key %>
druid.s3.secretKey=<%= @s3_secret_key %>
druid.storage.bucket=<%= @s3_bucket %>
druid.storage.baseKey=<%= @s3_prefix %>
druid.storage.archiveBucket=<%= @s3_bucket %>
druid.storage.archiveBaseKey=indexing-tasks
<% else %>
druid.storage.storageDirectory=<%= @druid_local_storage_dir %>
<% end %>

# Discovery
druid.selectors.indexing.serviceName=overlord
druid.selectors.coordinator.serviceName=coordinator
druid.discovery.curator.path=/druid/discoveryPath
